
TXT

  1. Создать внешний репозиторий c названием TXT.
https://github.com/ninochka1/
NEW - Create a new repository - Repository name (TXT) - Public -Add a README file - Create repository

  2. Клонировать репозиторий TXT на локальный компьютер.
$ git clone https://github.com/ninochka1/TXT.git

  3. Внутри локального TXT создать файл “new.txt”.
$ cd TXT ; touch new.txt

  4. Добавить файл под гит.
$ git add new.txt

  5. Закоммитить файл.
$ git commit -m "add new.txt"

  6. Отправить файл на внешний GitHub репозиторий.
$ git push

  7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
$ cat > new.txt
Name - Nina
Surname - Prudnikova
Age - 36
Pets - 0
Future desired salari - 2000

ENTER
CNTRL+C

  8. Отправить изменения на внешний репозиторий.
$ git commit -am "add personal info"
$ git push

  9. Создать файл preferences.txt
$ touch preferences.txt

  10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, стрaна которую хотели бы посетить) в формате TXT.
$ vim preferences.txt
INSER

Favorite movie - Harry Potter and the Prisoner of Azkaban
Favorite series - Poirot
Favorite food - omelet
Favorite season - spring
Country I want to visit - New Zealand
esc
:wq

  11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
$ cat > skills.txt
Git Bash
GitHub
JSON, XML
Basics JS
Postman
Charles, Fiddler
Dev Tools
Android Studio
XCode
Basics SQL
Jmeter

ENTER
CNTRL+C

  12. Сделать коммит в одну строку.
$ git commit -am "add preference.txt and skills.txt"

  13. Отправить сразу 2 файла на внешний репозиторий.
$ git push

  14. На веб интерфейсе создатьфайл bug_report.txt.
-Выбрать на веб интерфейсе Add file - Create new file - название bug_report.txt

  15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

-Выбрать commite new file

  16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

-Выбрать файл - нажать на "карандаш"- внести нужные изенения:

 ID - 19
 Reporter - Nina Prudnikova
 Project Build - Music 3.1
 Summary - Treck is not plaing after click on.
 Severity - Critical.
 Priority - High.
 Reproducibility - Always.
 Requirements - AS-2.2.
 Platform - Chrome 102.0.5005.63.
 OS- Windows 10 Home.
 Description - Treck is not plaing after click on.
 Steps to reproduce:
  1. Go to the site https://your.music.com;
  2. Click on any track.
 Actual result - track is playing.
 Expected result - track is not plaing.
 Comments - it did not reproduce at last checking.
 Attachments - video_1.mp4.

  17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 

-добавить комментарий - нажать Commit changes.

  18. Синхронизировать внешний и локальный репозиторий TXT
$ git fetch
#чтобы посмотреть есть ли изменения на веб интерфейсе
$ git pull



JSON

  1. Создать внешний репозиторий c названием JSON.
https://github.com/ninochka1/
NEW - Create a new repository - Repository name (JSON) - Public -Add a README file - Create repository

  2. Клонировать репозиторий JSON на локальный компьютер.
$ git clone https://github.com/ninochka1/JSON.git

  3. Внутри локального JSON создать файл “new.json”.
$ cd JSON ; touch new.json
 
 4. Добавить файл под гит.
$ git add new.json

  5. Закоммитить файл.
$ git commit -m "add new.json"

  6. Отправить файл на внешний GitHub репозиторий.
$ git push

  7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
$ vim new.txt
{
"Name":"Nina",
"Surname":"Prudnikova",
"Age":36,
"Pets":0,
"Future desired salari":"2000$"
}

ENTER
CNTRL+C

  8. Отправить изменения на внешний репозиторий.
$ git commit -am "add personal info"
$ git push

  9. Создать файл preferences.json
$ touch preferences.json

  10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
$ vim preferences.json
INSER

{
"Favorite movie":"Harry Potter and the Prisoner of Azkaban",
"Favorite series"it:"Poirot",
"Favorite food":"omelet",
"Favorite season":"spring",
"Country I want to visit":"New Zealand"
}

esc
:wq

  11. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
$ touch skills.json
$ vim skills.json
INSERT

{
"Skills":[
"GitHub",
"JSON",
"XML",
"Basics JS",
"Postman",
"Charles",
"Fiddler",
"Dev Tools",
"Android Studio",
"XCode",
"Basics SQL",
"Jmeter"
]
}

esc
:wq

  12. Отправить сразу 2 файла на внешний репозиторий.
$ git commit -am "add preferences.json and skills.json" ; git push

  13. На веб интерфейсе создать файл bug_report.json.
-Выбрать на веб интерфейсе Add file - Create new file - название bug_report.json

  14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
-Выбрать commite new file

  15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
-Выбрать файл - нажать на "карандаш"- внести нужные изенения:

{
 "ID":19,
 "Reporter":"Nina Prudnikova",
 "Project Build":"Music 3.1",
 "Summary":"Treck is not plaing after click on",
 "Severity":"Critical",
 "Priority":"High",
 "Reproducibility":"Always",
 "Requirements":"AS-2.2",
 "Platform":"Chrome 102.0.5005.63",
 "OS":"Windows 10 Home",
 "Description":"Treck is not plaing after click on",
 "Steps to reproduce":[
  "1_Go to the site https://your.music.com",
  "2_Click on any track"
   ],
 "Actual result":"track is playing",
 "Expected result":"track is not plaing",
 "Comments":"it did not reproduce at last checking",
 "Attachments":"video_1.mp4"
}

  16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
-добавить комментарий - нажать Commit changes.
  
  17. Синхронизировать внешний и локальный репозиторий JSON
$ git fetch
#чтобы посмотреть есть ли изменения на веб интерфейсе
$ git pull


XML
  1. Создать внешний репозиторий c названием XML.
https://github.com/ninochka1/
NEW - Create a new repository - Repository name (XML) - Public -Add a README file

  2. Клонировать репозиторий XML на локальный компьютер.
$ git clone https://github.com/ninochka1/XML.git

  3. Внутри локального XML создать файл “new.xml”.
$ cd XML ; touch new.xml

  4. Добавить файл под гит.
$ git add new.xml

  5. Закоммитить файл.
$ git commit -m "add new.xml"

  6. Отправить файл на внешний GitHub репозиторий.
$ git push

  7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
$ vim new.xml
i

<?xml version="1.0" encoding="utf-8"?>
<person>
        <name>Nina</name>
        <surname>Prudnikova</surname>
        <age>36</age>
        <pets>0</pets>
        <salary category="future desired">good salary</salary>
</person>

esc
:wq

  8. Отправить изменения на внешний репозиторий.
$ git commit -am "add personal info" ; git push


  9. Создать файл preferences.xml
$ touch preferences.xml

  10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
$ vim preferences.xml
i
<?xml version="1.0" encoding="utf-8"?>
<preferences>
        <favorite_movie>Harry Potter and the Prisoner of Azkaban</favorite_movie>
        <favorite_series>Poirot</favorite_series>
        <favorite_food>omelet</favorite_food>
        <favorite_season>spring</favorite_season>
        <country_visit>New Zealand</country_visit>
</preferences>

esc
:wq


  11. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
$ touch skills.xml ; vim skills.xml

<?xml version="1.0" encoding="utf-8"?>
<skills>
        <item>GitBash basic</item>
        <item>GitHub</item>
        <item>JSON</item>
        <item>XML</item>
        <item>JS basic</item>
        <item>Postman</item>
        <item>Charles</item>
        <item>Fiddler</item>
        <item>DevTools</item>
        <item>AndroidStudio</item>
        <item>XCode</item>
        <item>SQL basic</item>
        <item>Jmeter</item>
</skills>

esc
:wq

  12. Сделать коммит в одну строку.
$ git commit -am "add preferences.xml and skills.xml"

  13. Отправить сразу 2 файла на внешний репозиторий.
$ git push

  14. На веб интерфейсе создать файл bug_report.xml.
-Выбрать на веб интерфейсе Add file - Create new file - название bug_report.xml

  15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
-Выбрать commite new file

  16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
-Выбрать файл - нажать на "карандаш"- внести нужные изенения:

<?xml version="1.0" encoding="utf-8"?>
<BugReport>
  <ID>19</ID>
  <Reporter>Nina Prudnikova</Reporter>
  <ProjectBuild>Music 3.1</ProjectBuild>
  <Summary>Treck is not plaing after click on</Summary>
  <Severity>Critical</Severity>
  <Priority>High</Priority>
  <Reproducibility>Always</Reproducibility> 
  <Requirements>AS-2.2</Requirements>
  <Platform>Chrome 102.0.5005.63</Platform>
  <OS>Windows 10 Home</OS>
  <Description>Treck is not plaing after click on</Description>
  <Steps>
     <first>Go to the site<homepages xmlns:xlink="https://your.music.com/xlink"/>
       </first>
     <second>Click on any track</second>
  </Steps>
  <ActualResult>Track is playing</ActualResult>
  <ExpectedResult>Track is not plaing</ExpectedResult>
  <Comments>It did not reproduce at last checking</Comments>
  <Attachments>video_1.mp4</Attachments>
</BugReport>


  17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
-добавить комментарий - нажать Commit changes.
  
  18. Синхронизировать внешний и локальный репозиторий XML
$ git fetch
#чтобы посмотреть есть ли изменения на веб интерфейсе
$ git pull
